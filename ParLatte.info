-----------------------------------------------------------------------------
Info file generated by Happy Version 1.19.12 from ParLatte.y
-----------------------------------------------------------------------------


rule 37 is unused
rule 38 is unused
rule 39 is unused

-----------------------------------------------------------------------------
Grammar
-----------------------------------------------------------------------------
	%start_pProgram -> Program                         (0)
	Ident -> L_ident                                   (1)
	Integer -> L_integ                                 (2)
	String -> L_quoted                                 (3)
	Program -> ListStmt                                (4)
	Block -> '{' ListStmt '}'                          (5)
	ListStmt ->                                        (6)
	ListStmt -> ListStmt Stmt                          (7)
	Stmt -> ';'                                        (8)
	Stmt -> Block                                      (9)
	Stmt -> Type ListItem ';'                          (10)
	Stmt -> Type Ident '(' ListArg ')' Block           (11)
	Stmt -> Ident '=' Expr ';'                         (12)
	Stmt -> Ident '++' ';'                             (13)
	Stmt -> Ident '--' ';'                             (14)
	Stmt -> 'return' Expr ';'                          (15)
	Stmt -> 'return' ';'                               (16)
	Stmt -> 'if' '(' Expr ')' Block                    (17)
	Stmt -> 'if' '(' Expr ')' Block 'else' Block       (18)
	Stmt -> 'while' '(' Expr ')' Block                 (19)
	Stmt -> Expr ';'                                   (20)
	Stmt -> 'print' Expr ';'                           (21)
	Arg -> Type Ident                                  (22)
	Arg -> Type '&' Ident                              (23)
	ListArg ->                                         (24)
	ListArg -> Arg                                     (25)
	ListArg -> Arg ',' ListArg                         (26)
	Item -> Ident                                      (27)
	Item -> Ident '=' Expr                             (28)
	ListItem -> Item                                   (29)
	ListItem -> Item ',' ListItem                      (30)
	Type -> PType                                      (31)
	Type -> VType                                      (32)
	PType -> 'int'                                     (33)
	PType -> 'string'                                  (34)
	PType -> 'bool'                                    (35)
	VType -> 'void'                                    (36)
	ListType ->                                        (37)
	ListType -> Type                                   (38)
	ListType -> Type ',' ListType                      (39)
	Expr6 -> Ident                                     (40)
	Expr6 -> Integer                                   (41)
	Expr6 -> String                                    (42)
	Expr6 -> 'true'                                    (43)
	Expr6 -> 'false'                                   (44)
	Expr6 -> Ident '(' ListExpr ')'                    (45)
	Expr6 -> '(' Expr ')'                              (46)
	Expr5 -> '-' Expr6                                 (47)
	Expr5 -> '!' Expr6                                 (48)
	Expr5 -> Expr6                                     (49)
	Expr4 -> Expr4 MulOp Expr5                         (50)
	Expr4 -> Expr5                                     (51)
	Expr3 -> Expr3 AddOp Expr4                         (52)
	Expr3 -> Expr4                                     (53)
	Expr2 -> Expr2 RelOp Expr3                         (54)
	Expr2 -> Expr3                                     (55)
	Expr1 -> Expr2 '&&' Expr1                          (56)
	Expr1 -> Expr2                                     (57)
	Expr -> Expr1 '||' Expr                            (58)
	Expr -> Expr1                                      (59)
	ListExpr ->                                        (60)
	ListExpr -> Expr                                   (61)
	ListExpr -> Expr ',' ListExpr                      (62)
	AddOp -> '+'                                       (63)
	AddOp -> '-'                                       (64)
	MulOp -> '*'                                       (65)
	MulOp -> '/'                                       (66)
	MulOp -> '%'                                       (67)
	RelOp -> '<'                                       (68)
	RelOp -> '<='                                      (69)
	RelOp -> '>'                                       (70)
	RelOp -> '>='                                      (71)
	RelOp -> '=='                                      (72)
	RelOp -> '!='                                      (73)

-----------------------------------------------------------------------------
Terminals
-----------------------------------------------------------------------------
	'!'            { PT _ (TS _ 1) }
	'!='           { PT _ (TS _ 2) }
	'%'            { PT _ (TS _ 3) }
	'&'            { PT _ (TS _ 4) }
	'&&'           { PT _ (TS _ 5) }
	'('            { PT _ (TS _ 6) }
	')'            { PT _ (TS _ 7) }
	'*'            { PT _ (TS _ 8) }
	'+'            { PT _ (TS _ 9) }
	'++'           { PT _ (TS _ 10) }
	','            { PT _ (TS _ 11) }
	'-'            { PT _ (TS _ 12) }
	'--'           { PT _ (TS _ 13) }
	'/'            { PT _ (TS _ 14) }
	';'            { PT _ (TS _ 15) }
	'<'            { PT _ (TS _ 16) }
	'<='           { PT _ (TS _ 17) }
	'='            { PT _ (TS _ 18) }
	'=='           { PT _ (TS _ 19) }
	'>'            { PT _ (TS _ 20) }
	'>='           { PT _ (TS _ 21) }
	'bool'         { PT _ (TS _ 22) }
	'else'         { PT _ (TS _ 23) }
	'false'        { PT _ (TS _ 24) }
	'if'           { PT _ (TS _ 25) }
	'int'          { PT _ (TS _ 26) }
	'print'        { PT _ (TS _ 27) }
	'return'       { PT _ (TS _ 28) }
	'string'       { PT _ (TS _ 29) }
	'true'         { PT _ (TS _ 30) }
	'void'         { PT _ (TS _ 31) }
	'while'        { PT _ (TS _ 32) }
	'{'            { PT _ (TS _ 33) }
	'||'           { PT _ (TS _ 34) }
	'}'            { PT _ (TS _ 35) }
	L_ident        { PT _ (TV $$) }
	L_integ        { PT _ (TI $$) }
	L_quoted       { PT _ (TL $$) }

-----------------------------------------------------------------------------
Non-terminals
-----------------------------------------------------------------------------
	%start_pProgram rule  0
	Ident           rule  1
	Integer         rule  2
	String          rule  3
	Program         rule  4
	Block           rule  5
	ListStmt        rules 6, 7
	Stmt            rules 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21
	Arg             rules 22, 23
	ListArg         rules 24, 25, 26
	Item            rules 27, 28
	ListItem        rules 29, 30
	Type            rules 31, 32
	PType           rules 33, 34, 35
	VType           rule  36
	ListType        rules 37, 38, 39
	Expr6           rules 40, 41, 42, 43, 44, 45, 46
	Expr5           rules 47, 48, 49
	Expr4           rules 50, 51
	Expr3           rules 52, 53
	Expr2           rules 54, 55
	Expr1           rules 56, 57
	Expr            rules 58, 59
	ListExpr        rules 60, 61, 62
	AddOp           rules 63, 64
	MulOp           rules 65, 66, 67
	RelOp           rules 68, 69, 70, 71, 72, 73

-----------------------------------------------------------------------------
States
-----------------------------------------------------------------------------
State 0


	'!'            reduce using rule 6
	'('            reduce using rule 6
	'-'            reduce using rule 6
	';'            reduce using rule 6
	'bool'         reduce using rule 6
	'false'        reduce using rule 6
	'if'           reduce using rule 6
	'int'          reduce using rule 6
	'print'        reduce using rule 6
	'return'       reduce using rule 6
	'string'       reduce using rule 6
	'true'         reduce using rule 6
	'void'         reduce using rule 6
	'while'        reduce using rule 6
	'{'            reduce using rule 6
	L_ident        reduce using rule 6
	L_integ        reduce using rule 6
	L_quoted       reduce using rule 6
	%eof           reduce using rule 6

	Program        goto state 3
	ListStmt       goto state 4

State 1


	L_ident        shift, and enter state 2


State 2

	Ident -> L_ident .                                  (rule 1)

	'!='           reduce using rule 1
	'%'            reduce using rule 1
	'&&'           reduce using rule 1
	'('            reduce using rule 1
	')'            reduce using rule 1
	'*'            reduce using rule 1
	'+'            reduce using rule 1
	'++'           reduce using rule 1
	','            reduce using rule 1
	'-'            reduce using rule 1
	'--'           reduce using rule 1
	'/'            reduce using rule 1
	';'            reduce using rule 1
	'<'            reduce using rule 1
	'<='           reduce using rule 1
	'='            reduce using rule 1
	'=='           reduce using rule 1
	'>'            reduce using rule 1
	'>='           reduce using rule 1
	'||'           reduce using rule 1


State 3

	%start_pProgram -> Program .                        (rule 0)

	%eof           accept


State 4

	Program -> ListStmt .                               (rule 4)
	ListStmt -> ListStmt . Stmt                         (rule 7)

	'!'            shift, and enter state 20
	'('            shift, and enter state 21
	'-'            shift, and enter state 22
	';'            shift, and enter state 23
	'bool'         shift, and enter state 24
	'false'        shift, and enter state 25
	'if'           shift, and enter state 26
	'int'          shift, and enter state 27
	'print'        shift, and enter state 28
	'return'       shift, and enter state 29
	'string'       shift, and enter state 30
	'true'         shift, and enter state 31
	'void'         shift, and enter state 32
	'while'        shift, and enter state 33
	'{'            shift, and enter state 34
	L_ident        shift, and enter state 2
	L_integ        shift, and enter state 35
	L_quoted       shift, and enter state 36
	%eof           reduce using rule 4

	Ident          goto state 5
	Integer        goto state 6
	String         goto state 7
	Block          goto state 8
	Stmt           goto state 9
	Type           goto state 10
	PType          goto state 11
	VType          goto state 12
	Expr6          goto state 13
	Expr5          goto state 14
	Expr4          goto state 15
	Expr3          goto state 16
	Expr2          goto state 17
	Expr1          goto state 18
	Expr           goto state 19

State 5

	Stmt -> Ident . '=' Expr ';'                        (rule 12)
	Stmt -> Ident . '++' ';'                            (rule 13)
	Stmt -> Ident . '--' ';'                            (rule 14)
	Expr6 -> Ident .                                    (rule 40)
	Expr6 -> Ident . '(' ListExpr ')'                   (rule 45)

	'!='           reduce using rule 40
	'%'            reduce using rule 40
	'&&'           reduce using rule 40
	'('            shift, and enter state 67
	'*'            reduce using rule 40
	'+'            reduce using rule 40
	'++'           shift, and enter state 68
	'-'            reduce using rule 40
	'--'           shift, and enter state 69
	'/'            reduce using rule 40
	';'            reduce using rule 40
	'<'            reduce using rule 40
	'<='           reduce using rule 40
	'='            shift, and enter state 70
	'=='           reduce using rule 40
	'>'            reduce using rule 40
	'>='           reduce using rule 40
	'||'           reduce using rule 40


State 6

	Expr6 -> Integer .                                  (rule 41)

	'!='           reduce using rule 41
	'%'            reduce using rule 41
	'&&'           reduce using rule 41
	')'            reduce using rule 41
	'*'            reduce using rule 41
	'+'            reduce using rule 41
	','            reduce using rule 41
	'-'            reduce using rule 41
	'/'            reduce using rule 41
	';'            reduce using rule 41
	'<'            reduce using rule 41
	'<='           reduce using rule 41
	'=='           reduce using rule 41
	'>'            reduce using rule 41
	'>='           reduce using rule 41
	'||'           reduce using rule 41


State 7

	Expr6 -> String .                                   (rule 42)

	'!='           reduce using rule 42
	'%'            reduce using rule 42
	'&&'           reduce using rule 42
	')'            reduce using rule 42
	'*'            reduce using rule 42
	'+'            reduce using rule 42
	','            reduce using rule 42
	'-'            reduce using rule 42
	'/'            reduce using rule 42
	';'            reduce using rule 42
	'<'            reduce using rule 42
	'<='           reduce using rule 42
	'=='           reduce using rule 42
	'>'            reduce using rule 42
	'>='           reduce using rule 42
	'||'           reduce using rule 42


State 8

	Stmt -> Block .                                     (rule 9)

	'!'            reduce using rule 9
	'('            reduce using rule 9
	'-'            reduce using rule 9
	';'            reduce using rule 9
	'bool'         reduce using rule 9
	'false'        reduce using rule 9
	'if'           reduce using rule 9
	'int'          reduce using rule 9
	'print'        reduce using rule 9
	'return'       reduce using rule 9
	'string'       reduce using rule 9
	'true'         reduce using rule 9
	'void'         reduce using rule 9
	'while'        reduce using rule 9
	'{'            reduce using rule 9
	'}'            reduce using rule 9
	L_ident        reduce using rule 9
	L_integ        reduce using rule 9
	L_quoted       reduce using rule 9
	%eof           reduce using rule 9


State 9

	ListStmt -> ListStmt Stmt .                         (rule 7)

	'!'            reduce using rule 7
	'('            reduce using rule 7
	'-'            reduce using rule 7
	';'            reduce using rule 7
	'bool'         reduce using rule 7
	'false'        reduce using rule 7
	'if'           reduce using rule 7
	'int'          reduce using rule 7
	'print'        reduce using rule 7
	'return'       reduce using rule 7
	'string'       reduce using rule 7
	'true'         reduce using rule 7
	'void'         reduce using rule 7
	'while'        reduce using rule 7
	'{'            reduce using rule 7
	'}'            reduce using rule 7
	L_ident        reduce using rule 7
	L_integ        reduce using rule 7
	L_quoted       reduce using rule 7
	%eof           reduce using rule 7


State 10

	Stmt -> Type . ListItem ';'                         (rule 10)
	Stmt -> Type . Ident '(' ListArg ')' Block          (rule 11)

	L_ident        shift, and enter state 2

	Ident          goto state 64
	Item           goto state 65
	ListItem       goto state 66

State 11

	Type -> PType .                                     (rule 31)

	'&'            reduce using rule 31
	L_ident        reduce using rule 31


State 12

	Type -> VType .                                     (rule 32)

	'&'            reduce using rule 32
	L_ident        reduce using rule 32


State 13

	Expr5 -> Expr6 .                                    (rule 49)

	'!='           reduce using rule 49
	'%'            reduce using rule 49
	'&&'           reduce using rule 49
	')'            reduce using rule 49
	'*'            reduce using rule 49
	'+'            reduce using rule 49
	','            reduce using rule 49
	'-'            reduce using rule 49
	'/'            reduce using rule 49
	';'            reduce using rule 49
	'<'            reduce using rule 49
	'<='           reduce using rule 49
	'=='           reduce using rule 49
	'>'            reduce using rule 49
	'>='           reduce using rule 49
	'||'           reduce using rule 49


State 14

	Expr4 -> Expr5 .                                    (rule 51)

	'!='           reduce using rule 51
	'%'            reduce using rule 51
	'&&'           reduce using rule 51
	')'            reduce using rule 51
	'*'            reduce using rule 51
	'+'            reduce using rule 51
	','            reduce using rule 51
	'-'            reduce using rule 51
	'/'            reduce using rule 51
	';'            reduce using rule 51
	'<'            reduce using rule 51
	'<='           reduce using rule 51
	'=='           reduce using rule 51
	'>'            reduce using rule 51
	'>='           reduce using rule 51
	'||'           reduce using rule 51


State 15

	Expr4 -> Expr4 . MulOp Expr5                        (rule 50)
	Expr3 -> Expr4 .                                    (rule 53)

	'!='           reduce using rule 53
	'%'            shift, and enter state 61
	'&&'           reduce using rule 53
	')'            reduce using rule 53
	'*'            shift, and enter state 62
	'+'            reduce using rule 53
	','            reduce using rule 53
	'-'            reduce using rule 53
	'/'            shift, and enter state 63
	';'            reduce using rule 53
	'<'            reduce using rule 53
	'<='           reduce using rule 53
	'=='           reduce using rule 53
	'>'            reduce using rule 53
	'>='           reduce using rule 53
	'||'           reduce using rule 53

	MulOp          goto state 60

State 16

	Expr3 -> Expr3 . AddOp Expr4                        (rule 52)
	Expr2 -> Expr3 .                                    (rule 55)

	'!='           reduce using rule 55
	'&&'           reduce using rule 55
	')'            reduce using rule 55
	'+'            shift, and enter state 58
	','            reduce using rule 55
	'-'            shift, and enter state 59
	';'            reduce using rule 55
	'<'            reduce using rule 55
	'<='           reduce using rule 55
	'=='           reduce using rule 55
	'>'            reduce using rule 55
	'>='           reduce using rule 55
	'||'           reduce using rule 55

	AddOp          goto state 57

State 17

	Expr2 -> Expr2 . RelOp Expr3                        (rule 54)
	Expr1 -> Expr2 . '&&' Expr1                         (rule 56)
	Expr1 -> Expr2 .                                    (rule 57)

	'!='           shift, and enter state 50
	'&&'           shift, and enter state 51
	')'            reduce using rule 57
	','            reduce using rule 57
	';'            reduce using rule 57
	'<'            shift, and enter state 52
	'<='           shift, and enter state 53
	'=='           shift, and enter state 54
	'>'            shift, and enter state 55
	'>='           shift, and enter state 56
	'||'           reduce using rule 57

	RelOp          goto state 49

State 18

	Expr -> Expr1 . '||' Expr                           (rule 58)
	Expr -> Expr1 .                                     (rule 59)

	')'            reduce using rule 59
	','            reduce using rule 59
	';'            reduce using rule 59
	'||'           shift, and enter state 48


State 19

	Stmt -> Expr . ';'                                  (rule 20)

	';'            shift, and enter state 47


State 20

	Expr5 -> '!' . Expr6                                (rule 48)

	'('            shift, and enter state 21
	'false'        shift, and enter state 25
	'true'         shift, and enter state 31
	L_ident        shift, and enter state 2
	L_integ        shift, and enter state 35
	L_quoted       shift, and enter state 36

	Ident          goto state 39
	Integer        goto state 6
	String         goto state 7
	Expr6          goto state 46

State 21

	Expr6 -> '(' . Expr ')'                             (rule 46)

	'!'            shift, and enter state 20
	'('            shift, and enter state 21
	'-'            shift, and enter state 22
	'false'        shift, and enter state 25
	'true'         shift, and enter state 31
	L_ident        shift, and enter state 2
	L_integ        shift, and enter state 35
	L_quoted       shift, and enter state 36

	Ident          goto state 39
	Integer        goto state 6
	String         goto state 7
	Expr6          goto state 13
	Expr5          goto state 14
	Expr4          goto state 15
	Expr3          goto state 16
	Expr2          goto state 17
	Expr1          goto state 18
	Expr           goto state 45

State 22

	Expr5 -> '-' . Expr6                                (rule 47)

	'('            shift, and enter state 21
	'false'        shift, and enter state 25
	'true'         shift, and enter state 31
	L_ident        shift, and enter state 2
	L_integ        shift, and enter state 35
	L_quoted       shift, and enter state 36

	Ident          goto state 39
	Integer        goto state 6
	String         goto state 7
	Expr6          goto state 44

State 23

	Stmt -> ';' .                                       (rule 8)

	'!'            reduce using rule 8
	'('            reduce using rule 8
	'-'            reduce using rule 8
	';'            reduce using rule 8
	'bool'         reduce using rule 8
	'false'        reduce using rule 8
	'if'           reduce using rule 8
	'int'          reduce using rule 8
	'print'        reduce using rule 8
	'return'       reduce using rule 8
	'string'       reduce using rule 8
	'true'         reduce using rule 8
	'void'         reduce using rule 8
	'while'        reduce using rule 8
	'{'            reduce using rule 8
	'}'            reduce using rule 8
	L_ident        reduce using rule 8
	L_integ        reduce using rule 8
	L_quoted       reduce using rule 8
	%eof           reduce using rule 8


State 24

	PType -> 'bool' .                                   (rule 35)

	'&'            reduce using rule 35
	L_ident        reduce using rule 35


State 25

	Expr6 -> 'false' .                                  (rule 44)

	'!='           reduce using rule 44
	'%'            reduce using rule 44
	'&&'           reduce using rule 44
	')'            reduce using rule 44
	'*'            reduce using rule 44
	'+'            reduce using rule 44
	','            reduce using rule 44
	'-'            reduce using rule 44
	'/'            reduce using rule 44
	';'            reduce using rule 44
	'<'            reduce using rule 44
	'<='           reduce using rule 44
	'=='           reduce using rule 44
	'>'            reduce using rule 44
	'>='           reduce using rule 44
	'||'           reduce using rule 44


State 26

	Stmt -> 'if' . '(' Expr ')' Block                   (rule 17)
	Stmt -> 'if' . '(' Expr ')' Block 'else' Block      (rule 18)

	'('            shift, and enter state 43


State 27

	PType -> 'int' .                                    (rule 33)

	'&'            reduce using rule 33
	L_ident        reduce using rule 33


State 28

	Stmt -> 'print' . Expr ';'                          (rule 21)

	'!'            shift, and enter state 20
	'('            shift, and enter state 21
	'-'            shift, and enter state 22
	'false'        shift, and enter state 25
	'true'         shift, and enter state 31
	L_ident        shift, and enter state 2
	L_integ        shift, and enter state 35
	L_quoted       shift, and enter state 36

	Ident          goto state 39
	Integer        goto state 6
	String         goto state 7
	Expr6          goto state 13
	Expr5          goto state 14
	Expr4          goto state 15
	Expr3          goto state 16
	Expr2          goto state 17
	Expr1          goto state 18
	Expr           goto state 42

State 29

	Stmt -> 'return' . Expr ';'                         (rule 15)
	Stmt -> 'return' . ';'                              (rule 16)

	'!'            shift, and enter state 20
	'('            shift, and enter state 21
	'-'            shift, and enter state 22
	';'            shift, and enter state 41
	'false'        shift, and enter state 25
	'true'         shift, and enter state 31
	L_ident        shift, and enter state 2
	L_integ        shift, and enter state 35
	L_quoted       shift, and enter state 36

	Ident          goto state 39
	Integer        goto state 6
	String         goto state 7
	Expr6          goto state 13
	Expr5          goto state 14
	Expr4          goto state 15
	Expr3          goto state 16
	Expr2          goto state 17
	Expr1          goto state 18
	Expr           goto state 40

State 30

	PType -> 'string' .                                 (rule 34)

	'&'            reduce using rule 34
	L_ident        reduce using rule 34


State 31

	Expr6 -> 'true' .                                   (rule 43)

	'!='           reduce using rule 43
	'%'            reduce using rule 43
	'&&'           reduce using rule 43
	')'            reduce using rule 43
	'*'            reduce using rule 43
	'+'            reduce using rule 43
	','            reduce using rule 43
	'-'            reduce using rule 43
	'/'            reduce using rule 43
	';'            reduce using rule 43
	'<'            reduce using rule 43
	'<='           reduce using rule 43
	'=='           reduce using rule 43
	'>'            reduce using rule 43
	'>='           reduce using rule 43
	'||'           reduce using rule 43


State 32

	VType -> 'void' .                                   (rule 36)

	'&'            reduce using rule 36
	L_ident        reduce using rule 36


State 33

	Stmt -> 'while' . '(' Expr ')' Block                (rule 19)

	'('            shift, and enter state 38


State 34

	Block -> '{' . ListStmt '}'                         (rule 5)

	'!'            reduce using rule 6
	'('            reduce using rule 6
	'-'            reduce using rule 6
	';'            reduce using rule 6
	'bool'         reduce using rule 6
	'false'        reduce using rule 6
	'if'           reduce using rule 6
	'int'          reduce using rule 6
	'print'        reduce using rule 6
	'return'       reduce using rule 6
	'string'       reduce using rule 6
	'true'         reduce using rule 6
	'void'         reduce using rule 6
	'while'        reduce using rule 6
	'{'            reduce using rule 6
	'}'            reduce using rule 6
	L_ident        reduce using rule 6
	L_integ        reduce using rule 6
	L_quoted       reduce using rule 6

	ListStmt       goto state 37

State 35

	Integer -> L_integ .                                (rule 2)

	'!='           reduce using rule 2
	'%'            reduce using rule 2
	'&&'           reduce using rule 2
	')'            reduce using rule 2
	'*'            reduce using rule 2
	'+'            reduce using rule 2
	','            reduce using rule 2
	'-'            reduce using rule 2
	'/'            reduce using rule 2
	';'            reduce using rule 2
	'<'            reduce using rule 2
	'<='           reduce using rule 2
	'=='           reduce using rule 2
	'>'            reduce using rule 2
	'>='           reduce using rule 2
	'||'           reduce using rule 2


State 36

	String -> L_quoted .                                (rule 3)

	'!='           reduce using rule 3
	'%'            reduce using rule 3
	'&&'           reduce using rule 3
	')'            reduce using rule 3
	'*'            reduce using rule 3
	'+'            reduce using rule 3
	','            reduce using rule 3
	'-'            reduce using rule 3
	'/'            reduce using rule 3
	';'            reduce using rule 3
	'<'            reduce using rule 3
	'<='           reduce using rule 3
	'=='           reduce using rule 3
	'>'            reduce using rule 3
	'>='           reduce using rule 3
	'||'           reduce using rule 3


State 37

	Block -> '{' ListStmt . '}'                         (rule 5)
	ListStmt -> ListStmt . Stmt                         (rule 7)

	'!'            shift, and enter state 20
	'('            shift, and enter state 21
	'-'            shift, and enter state 22
	';'            shift, and enter state 23
	'bool'         shift, and enter state 24
	'false'        shift, and enter state 25
	'if'           shift, and enter state 26
	'int'          shift, and enter state 27
	'print'        shift, and enter state 28
	'return'       shift, and enter state 29
	'string'       shift, and enter state 30
	'true'         shift, and enter state 31
	'void'         shift, and enter state 32
	'while'        shift, and enter state 33
	'{'            shift, and enter state 34
	'}'            shift, and enter state 90
	L_ident        shift, and enter state 2
	L_integ        shift, and enter state 35
	L_quoted       shift, and enter state 36

	Ident          goto state 5
	Integer        goto state 6
	String         goto state 7
	Block          goto state 8
	Stmt           goto state 9
	Type           goto state 10
	PType          goto state 11
	VType          goto state 12
	Expr6          goto state 13
	Expr5          goto state 14
	Expr4          goto state 15
	Expr3          goto state 16
	Expr2          goto state 17
	Expr1          goto state 18
	Expr           goto state 19

State 38

	Stmt -> 'while' '(' . Expr ')' Block                (rule 19)

	'!'            shift, and enter state 20
	'('            shift, and enter state 21
	'-'            shift, and enter state 22
	'false'        shift, and enter state 25
	'true'         shift, and enter state 31
	L_ident        shift, and enter state 2
	L_integ        shift, and enter state 35
	L_quoted       shift, and enter state 36

	Ident          goto state 39
	Integer        goto state 6
	String         goto state 7
	Expr6          goto state 13
	Expr5          goto state 14
	Expr4          goto state 15
	Expr3          goto state 16
	Expr2          goto state 17
	Expr1          goto state 18
	Expr           goto state 89

State 39

	Expr6 -> Ident .                                    (rule 40)
	Expr6 -> Ident . '(' ListExpr ')'                   (rule 45)

	'!='           reduce using rule 40
	'%'            reduce using rule 40
	'&&'           reduce using rule 40
	'('            shift, and enter state 67
	')'            reduce using rule 40
	'*'            reduce using rule 40
	'+'            reduce using rule 40
	','            reduce using rule 40
	'-'            reduce using rule 40
	'/'            reduce using rule 40
	';'            reduce using rule 40
	'<'            reduce using rule 40
	'<='           reduce using rule 40
	'=='           reduce using rule 40
	'>'            reduce using rule 40
	'>='           reduce using rule 40
	'||'           reduce using rule 40


State 40

	Stmt -> 'return' Expr . ';'                         (rule 15)

	';'            shift, and enter state 88


State 41

	Stmt -> 'return' ';' .                              (rule 16)

	'!'            reduce using rule 16
	'('            reduce using rule 16
	'-'            reduce using rule 16
	';'            reduce using rule 16
	'bool'         reduce using rule 16
	'false'        reduce using rule 16
	'if'           reduce using rule 16
	'int'          reduce using rule 16
	'print'        reduce using rule 16
	'return'       reduce using rule 16
	'string'       reduce using rule 16
	'true'         reduce using rule 16
	'void'         reduce using rule 16
	'while'        reduce using rule 16
	'{'            reduce using rule 16
	'}'            reduce using rule 16
	L_ident        reduce using rule 16
	L_integ        reduce using rule 16
	L_quoted       reduce using rule 16
	%eof           reduce using rule 16


State 42

	Stmt -> 'print' Expr . ';'                          (rule 21)

	';'            shift, and enter state 87


State 43

	Stmt -> 'if' '(' . Expr ')' Block                   (rule 17)
	Stmt -> 'if' '(' . Expr ')' Block 'else' Block      (rule 18)

	'!'            shift, and enter state 20
	'('            shift, and enter state 21
	'-'            shift, and enter state 22
	'false'        shift, and enter state 25
	'true'         shift, and enter state 31
	L_ident        shift, and enter state 2
	L_integ        shift, and enter state 35
	L_quoted       shift, and enter state 36

	Ident          goto state 39
	Integer        goto state 6
	String         goto state 7
	Expr6          goto state 13
	Expr5          goto state 14
	Expr4          goto state 15
	Expr3          goto state 16
	Expr2          goto state 17
	Expr1          goto state 18
	Expr           goto state 86

State 44

	Expr5 -> '-' Expr6 .                                (rule 47)

	'!='           reduce using rule 47
	'%'            reduce using rule 47
	'&&'           reduce using rule 47
	')'            reduce using rule 47
	'*'            reduce using rule 47
	'+'            reduce using rule 47
	','            reduce using rule 47
	'-'            reduce using rule 47
	'/'            reduce using rule 47
	';'            reduce using rule 47
	'<'            reduce using rule 47
	'<='           reduce using rule 47
	'=='           reduce using rule 47
	'>'            reduce using rule 47
	'>='           reduce using rule 47
	'||'           reduce using rule 47


State 45

	Expr6 -> '(' Expr . ')'                             (rule 46)

	')'            shift, and enter state 85


State 46

	Expr5 -> '!' Expr6 .                                (rule 48)

	'!='           reduce using rule 48
	'%'            reduce using rule 48
	'&&'           reduce using rule 48
	')'            reduce using rule 48
	'*'            reduce using rule 48
	'+'            reduce using rule 48
	','            reduce using rule 48
	'-'            reduce using rule 48
	'/'            reduce using rule 48
	';'            reduce using rule 48
	'<'            reduce using rule 48
	'<='           reduce using rule 48
	'=='           reduce using rule 48
	'>'            reduce using rule 48
	'>='           reduce using rule 48
	'||'           reduce using rule 48


State 47

	Stmt -> Expr ';' .                                  (rule 20)

	'!'            reduce using rule 20
	'('            reduce using rule 20
	'-'            reduce using rule 20
	';'            reduce using rule 20
	'bool'         reduce using rule 20
	'false'        reduce using rule 20
	'if'           reduce using rule 20
	'int'          reduce using rule 20
	'print'        reduce using rule 20
	'return'       reduce using rule 20
	'string'       reduce using rule 20
	'true'         reduce using rule 20
	'void'         reduce using rule 20
	'while'        reduce using rule 20
	'{'            reduce using rule 20
	'}'            reduce using rule 20
	L_ident        reduce using rule 20
	L_integ        reduce using rule 20
	L_quoted       reduce using rule 20
	%eof           reduce using rule 20


State 48

	Expr -> Expr1 '||' . Expr                           (rule 58)

	'!'            shift, and enter state 20
	'('            shift, and enter state 21
	'-'            shift, and enter state 22
	'false'        shift, and enter state 25
	'true'         shift, and enter state 31
	L_ident        shift, and enter state 2
	L_integ        shift, and enter state 35
	L_quoted       shift, and enter state 36

	Ident          goto state 39
	Integer        goto state 6
	String         goto state 7
	Expr6          goto state 13
	Expr5          goto state 14
	Expr4          goto state 15
	Expr3          goto state 16
	Expr2          goto state 17
	Expr1          goto state 18
	Expr           goto state 84

State 49

	Expr2 -> Expr2 RelOp . Expr3                        (rule 54)

	'!'            shift, and enter state 20
	'('            shift, and enter state 21
	'-'            shift, and enter state 22
	'false'        shift, and enter state 25
	'true'         shift, and enter state 31
	L_ident        shift, and enter state 2
	L_integ        shift, and enter state 35
	L_quoted       shift, and enter state 36

	Ident          goto state 39
	Integer        goto state 6
	String         goto state 7
	Expr6          goto state 13
	Expr5          goto state 14
	Expr4          goto state 15
	Expr3          goto state 83

State 50

	RelOp -> '!=' .                                     (rule 73)

	'!'            reduce using rule 73
	'('            reduce using rule 73
	'-'            reduce using rule 73
	'false'        reduce using rule 73
	'true'         reduce using rule 73
	L_ident        reduce using rule 73
	L_integ        reduce using rule 73
	L_quoted       reduce using rule 73


State 51

	Expr1 -> Expr2 '&&' . Expr1                         (rule 56)

	'!'            shift, and enter state 20
	'('            shift, and enter state 21
	'-'            shift, and enter state 22
	'false'        shift, and enter state 25
	'true'         shift, and enter state 31
	L_ident        shift, and enter state 2
	L_integ        shift, and enter state 35
	L_quoted       shift, and enter state 36

	Ident          goto state 39
	Integer        goto state 6
	String         goto state 7
	Expr6          goto state 13
	Expr5          goto state 14
	Expr4          goto state 15
	Expr3          goto state 16
	Expr2          goto state 17
	Expr1          goto state 82

State 52

	RelOp -> '<' .                                      (rule 68)

	'!'            reduce using rule 68
	'('            reduce using rule 68
	'-'            reduce using rule 68
	'false'        reduce using rule 68
	'true'         reduce using rule 68
	L_ident        reduce using rule 68
	L_integ        reduce using rule 68
	L_quoted       reduce using rule 68


State 53

	RelOp -> '<=' .                                     (rule 69)

	'!'            reduce using rule 69
	'('            reduce using rule 69
	'-'            reduce using rule 69
	'false'        reduce using rule 69
	'true'         reduce using rule 69
	L_ident        reduce using rule 69
	L_integ        reduce using rule 69
	L_quoted       reduce using rule 69


State 54

	RelOp -> '==' .                                     (rule 72)

	'!'            reduce using rule 72
	'('            reduce using rule 72
	'-'            reduce using rule 72
	'false'        reduce using rule 72
	'true'         reduce using rule 72
	L_ident        reduce using rule 72
	L_integ        reduce using rule 72
	L_quoted       reduce using rule 72


State 55

	RelOp -> '>' .                                      (rule 70)

	'!'            reduce using rule 70
	'('            reduce using rule 70
	'-'            reduce using rule 70
	'false'        reduce using rule 70
	'true'         reduce using rule 70
	L_ident        reduce using rule 70
	L_integ        reduce using rule 70
	L_quoted       reduce using rule 70


State 56

	RelOp -> '>=' .                                     (rule 71)

	'!'            reduce using rule 71
	'('            reduce using rule 71
	'-'            reduce using rule 71
	'false'        reduce using rule 71
	'true'         reduce using rule 71
	L_ident        reduce using rule 71
	L_integ        reduce using rule 71
	L_quoted       reduce using rule 71


State 57

	Expr3 -> Expr3 AddOp . Expr4                        (rule 52)

	'!'            shift, and enter state 20
	'('            shift, and enter state 21
	'-'            shift, and enter state 22
	'false'        shift, and enter state 25
	'true'         shift, and enter state 31
	L_ident        shift, and enter state 2
	L_integ        shift, and enter state 35
	L_quoted       shift, and enter state 36

	Ident          goto state 39
	Integer        goto state 6
	String         goto state 7
	Expr6          goto state 13
	Expr5          goto state 14
	Expr4          goto state 81

State 58

	AddOp -> '+' .                                      (rule 63)

	'!'            reduce using rule 63
	'('            reduce using rule 63
	'-'            reduce using rule 63
	'false'        reduce using rule 63
	'true'         reduce using rule 63
	L_ident        reduce using rule 63
	L_integ        reduce using rule 63
	L_quoted       reduce using rule 63


State 59

	AddOp -> '-' .                                      (rule 64)

	'!'            reduce using rule 64
	'('            reduce using rule 64
	'-'            reduce using rule 64
	'false'        reduce using rule 64
	'true'         reduce using rule 64
	L_ident        reduce using rule 64
	L_integ        reduce using rule 64
	L_quoted       reduce using rule 64


State 60

	Expr4 -> Expr4 MulOp . Expr5                        (rule 50)

	'!'            shift, and enter state 20
	'('            shift, and enter state 21
	'-'            shift, and enter state 22
	'false'        shift, and enter state 25
	'true'         shift, and enter state 31
	L_ident        shift, and enter state 2
	L_integ        shift, and enter state 35
	L_quoted       shift, and enter state 36

	Ident          goto state 39
	Integer        goto state 6
	String         goto state 7
	Expr6          goto state 13
	Expr5          goto state 80

State 61

	MulOp -> '%' .                                      (rule 67)

	'!'            reduce using rule 67
	'('            reduce using rule 67
	'-'            reduce using rule 67
	'false'        reduce using rule 67
	'true'         reduce using rule 67
	L_ident        reduce using rule 67
	L_integ        reduce using rule 67
	L_quoted       reduce using rule 67


State 62

	MulOp -> '*' .                                      (rule 65)

	'!'            reduce using rule 65
	'('            reduce using rule 65
	'-'            reduce using rule 65
	'false'        reduce using rule 65
	'true'         reduce using rule 65
	L_ident        reduce using rule 65
	L_integ        reduce using rule 65
	L_quoted       reduce using rule 65


State 63

	MulOp -> '/' .                                      (rule 66)

	'!'            reduce using rule 66
	'('            reduce using rule 66
	'-'            reduce using rule 66
	'false'        reduce using rule 66
	'true'         reduce using rule 66
	L_ident        reduce using rule 66
	L_integ        reduce using rule 66
	L_quoted       reduce using rule 66


State 64

	Stmt -> Type Ident . '(' ListArg ')' Block          (rule 11)
	Item -> Ident .                                     (rule 27)
	Item -> Ident . '=' Expr                            (rule 28)

	'('            shift, and enter state 78
	','            reduce using rule 27
	';'            reduce using rule 27
	'='            shift, and enter state 79


State 65

	ListItem -> Item .                                  (rule 29)
	ListItem -> Item . ',' ListItem                     (rule 30)

	','            shift, and enter state 77
	';'            reduce using rule 29


State 66

	Stmt -> Type ListItem . ';'                         (rule 10)

	';'            shift, and enter state 76


State 67

	Expr6 -> Ident '(' . ListExpr ')'                   (rule 45)

	'!'            shift, and enter state 20
	'('            shift, and enter state 21
	')'            reduce using rule 60
	'-'            shift, and enter state 22
	'false'        shift, and enter state 25
	'true'         shift, and enter state 31
	L_ident        shift, and enter state 2
	L_integ        shift, and enter state 35
	L_quoted       shift, and enter state 36

	Ident          goto state 39
	Integer        goto state 6
	String         goto state 7
	Expr6          goto state 13
	Expr5          goto state 14
	Expr4          goto state 15
	Expr3          goto state 16
	Expr2          goto state 17
	Expr1          goto state 18
	Expr           goto state 74
	ListExpr       goto state 75

State 68

	Stmt -> Ident '++' . ';'                            (rule 13)

	';'            shift, and enter state 73


State 69

	Stmt -> Ident '--' . ';'                            (rule 14)

	';'            shift, and enter state 72


State 70

	Stmt -> Ident '=' . Expr ';'                        (rule 12)

	'!'            shift, and enter state 20
	'('            shift, and enter state 21
	'-'            shift, and enter state 22
	'false'        shift, and enter state 25
	'true'         shift, and enter state 31
	L_ident        shift, and enter state 2
	L_integ        shift, and enter state 35
	L_quoted       shift, and enter state 36

	Ident          goto state 39
	Integer        goto state 6
	String         goto state 7
	Expr6          goto state 13
	Expr5          goto state 14
	Expr4          goto state 15
	Expr3          goto state 16
	Expr2          goto state 17
	Expr1          goto state 18
	Expr           goto state 71

State 71

	Stmt -> Ident '=' Expr . ';'                        (rule 12)

	';'            shift, and enter state 101


State 72

	Stmt -> Ident '--' ';' .                            (rule 14)

	'!'            reduce using rule 14
	'('            reduce using rule 14
	'-'            reduce using rule 14
	';'            reduce using rule 14
	'bool'         reduce using rule 14
	'false'        reduce using rule 14
	'if'           reduce using rule 14
	'int'          reduce using rule 14
	'print'        reduce using rule 14
	'return'       reduce using rule 14
	'string'       reduce using rule 14
	'true'         reduce using rule 14
	'void'         reduce using rule 14
	'while'        reduce using rule 14
	'{'            reduce using rule 14
	'}'            reduce using rule 14
	L_ident        reduce using rule 14
	L_integ        reduce using rule 14
	L_quoted       reduce using rule 14
	%eof           reduce using rule 14


State 73

	Stmt -> Ident '++' ';' .                            (rule 13)

	'!'            reduce using rule 13
	'('            reduce using rule 13
	'-'            reduce using rule 13
	';'            reduce using rule 13
	'bool'         reduce using rule 13
	'false'        reduce using rule 13
	'if'           reduce using rule 13
	'int'          reduce using rule 13
	'print'        reduce using rule 13
	'return'       reduce using rule 13
	'string'       reduce using rule 13
	'true'         reduce using rule 13
	'void'         reduce using rule 13
	'while'        reduce using rule 13
	'{'            reduce using rule 13
	'}'            reduce using rule 13
	L_ident        reduce using rule 13
	L_integ        reduce using rule 13
	L_quoted       reduce using rule 13
	%eof           reduce using rule 13


State 74

	ListExpr -> Expr .                                  (rule 61)
	ListExpr -> Expr . ',' ListExpr                     (rule 62)

	')'            reduce using rule 61
	','            shift, and enter state 100


State 75

	Expr6 -> Ident '(' ListExpr . ')'                   (rule 45)

	')'            shift, and enter state 99


State 76

	Stmt -> Type ListItem ';' .                         (rule 10)

	'!'            reduce using rule 10
	'('            reduce using rule 10
	'-'            reduce using rule 10
	';'            reduce using rule 10
	'bool'         reduce using rule 10
	'false'        reduce using rule 10
	'if'           reduce using rule 10
	'int'          reduce using rule 10
	'print'        reduce using rule 10
	'return'       reduce using rule 10
	'string'       reduce using rule 10
	'true'         reduce using rule 10
	'void'         reduce using rule 10
	'while'        reduce using rule 10
	'{'            reduce using rule 10
	'}'            reduce using rule 10
	L_ident        reduce using rule 10
	L_integ        reduce using rule 10
	L_quoted       reduce using rule 10
	%eof           reduce using rule 10


State 77

	ListItem -> Item ',' . ListItem                     (rule 30)

	L_ident        shift, and enter state 2

	Ident          goto state 97
	Item           goto state 65
	ListItem       goto state 98

State 78

	Stmt -> Type Ident '(' . ListArg ')' Block          (rule 11)

	')'            reduce using rule 24
	'bool'         shift, and enter state 24
	'int'          shift, and enter state 27
	'string'       shift, and enter state 30
	'void'         shift, and enter state 32

	Arg            goto state 94
	ListArg        goto state 95
	Type           goto state 96
	PType          goto state 11
	VType          goto state 12

State 79

	Item -> Ident '=' . Expr                            (rule 28)

	'!'            shift, and enter state 20
	'('            shift, and enter state 21
	'-'            shift, and enter state 22
	'false'        shift, and enter state 25
	'true'         shift, and enter state 31
	L_ident        shift, and enter state 2
	L_integ        shift, and enter state 35
	L_quoted       shift, and enter state 36

	Ident          goto state 39
	Integer        goto state 6
	String         goto state 7
	Expr6          goto state 13
	Expr5          goto state 14
	Expr4          goto state 15
	Expr3          goto state 16
	Expr2          goto state 17
	Expr1          goto state 18
	Expr           goto state 93

State 80

	Expr4 -> Expr4 MulOp Expr5 .                        (rule 50)

	'!='           reduce using rule 50
	'%'            reduce using rule 50
	'&&'           reduce using rule 50
	')'            reduce using rule 50
	'*'            reduce using rule 50
	'+'            reduce using rule 50
	','            reduce using rule 50
	'-'            reduce using rule 50
	'/'            reduce using rule 50
	';'            reduce using rule 50
	'<'            reduce using rule 50
	'<='           reduce using rule 50
	'=='           reduce using rule 50
	'>'            reduce using rule 50
	'>='           reduce using rule 50
	'||'           reduce using rule 50


State 81

	Expr4 -> Expr4 . MulOp Expr5                        (rule 50)
	Expr3 -> Expr3 AddOp Expr4 .                        (rule 52)

	'!='           reduce using rule 52
	'%'            shift, and enter state 61
	'&&'           reduce using rule 52
	')'            reduce using rule 52
	'*'            shift, and enter state 62
	'+'            reduce using rule 52
	','            reduce using rule 52
	'-'            reduce using rule 52
	'/'            shift, and enter state 63
	';'            reduce using rule 52
	'<'            reduce using rule 52
	'<='           reduce using rule 52
	'=='           reduce using rule 52
	'>'            reduce using rule 52
	'>='           reduce using rule 52
	'||'           reduce using rule 52

	MulOp          goto state 60

State 82

	Expr1 -> Expr2 '&&' Expr1 .                         (rule 56)

	')'            reduce using rule 56
	','            reduce using rule 56
	';'            reduce using rule 56
	'||'           reduce using rule 56


State 83

	Expr3 -> Expr3 . AddOp Expr4                        (rule 52)
	Expr2 -> Expr2 RelOp Expr3 .                        (rule 54)

	'!='           reduce using rule 54
	'&&'           reduce using rule 54
	')'            reduce using rule 54
	'+'            shift, and enter state 58
	','            reduce using rule 54
	'-'            shift, and enter state 59
	';'            reduce using rule 54
	'<'            reduce using rule 54
	'<='           reduce using rule 54
	'=='           reduce using rule 54
	'>'            reduce using rule 54
	'>='           reduce using rule 54
	'||'           reduce using rule 54

	AddOp          goto state 57

State 84

	Expr -> Expr1 '||' Expr .                           (rule 58)

	')'            reduce using rule 58
	','            reduce using rule 58
	';'            reduce using rule 58


State 85

	Expr6 -> '(' Expr ')' .                             (rule 46)

	'!='           reduce using rule 46
	'%'            reduce using rule 46
	'&&'           reduce using rule 46
	')'            reduce using rule 46
	'*'            reduce using rule 46
	'+'            reduce using rule 46
	','            reduce using rule 46
	'-'            reduce using rule 46
	'/'            reduce using rule 46
	';'            reduce using rule 46
	'<'            reduce using rule 46
	'<='           reduce using rule 46
	'=='           reduce using rule 46
	'>'            reduce using rule 46
	'>='           reduce using rule 46
	'||'           reduce using rule 46


State 86

	Stmt -> 'if' '(' Expr . ')' Block                   (rule 17)
	Stmt -> 'if' '(' Expr . ')' Block 'else' Block      (rule 18)

	')'            shift, and enter state 92


State 87

	Stmt -> 'print' Expr ';' .                          (rule 21)

	'!'            reduce using rule 21
	'('            reduce using rule 21
	'-'            reduce using rule 21
	';'            reduce using rule 21
	'bool'         reduce using rule 21
	'false'        reduce using rule 21
	'if'           reduce using rule 21
	'int'          reduce using rule 21
	'print'        reduce using rule 21
	'return'       reduce using rule 21
	'string'       reduce using rule 21
	'true'         reduce using rule 21
	'void'         reduce using rule 21
	'while'        reduce using rule 21
	'{'            reduce using rule 21
	'}'            reduce using rule 21
	L_ident        reduce using rule 21
	L_integ        reduce using rule 21
	L_quoted       reduce using rule 21
	%eof           reduce using rule 21


State 88

	Stmt -> 'return' Expr ';' .                         (rule 15)

	'!'            reduce using rule 15
	'('            reduce using rule 15
	'-'            reduce using rule 15
	';'            reduce using rule 15
	'bool'         reduce using rule 15
	'false'        reduce using rule 15
	'if'           reduce using rule 15
	'int'          reduce using rule 15
	'print'        reduce using rule 15
	'return'       reduce using rule 15
	'string'       reduce using rule 15
	'true'         reduce using rule 15
	'void'         reduce using rule 15
	'while'        reduce using rule 15
	'{'            reduce using rule 15
	'}'            reduce using rule 15
	L_ident        reduce using rule 15
	L_integ        reduce using rule 15
	L_quoted       reduce using rule 15
	%eof           reduce using rule 15


State 89

	Stmt -> 'while' '(' Expr . ')' Block                (rule 19)

	')'            shift, and enter state 91


State 90

	Block -> '{' ListStmt '}' .                         (rule 5)

	'!'            reduce using rule 5
	'('            reduce using rule 5
	'-'            reduce using rule 5
	';'            reduce using rule 5
	'bool'         reduce using rule 5
	'else'         reduce using rule 5
	'false'        reduce using rule 5
	'if'           reduce using rule 5
	'int'          reduce using rule 5
	'print'        reduce using rule 5
	'return'       reduce using rule 5
	'string'       reduce using rule 5
	'true'         reduce using rule 5
	'void'         reduce using rule 5
	'while'        reduce using rule 5
	'{'            reduce using rule 5
	'}'            reduce using rule 5
	L_ident        reduce using rule 5
	L_integ        reduce using rule 5
	L_quoted       reduce using rule 5
	%eof           reduce using rule 5


State 91

	Stmt -> 'while' '(' Expr ')' . Block                (rule 19)

	'{'            shift, and enter state 34

	Block          goto state 108

State 92

	Stmt -> 'if' '(' Expr ')' . Block                   (rule 17)
	Stmt -> 'if' '(' Expr ')' . Block 'else' Block      (rule 18)

	'{'            shift, and enter state 34

	Block          goto state 107

State 93

	Item -> Ident '=' Expr .                            (rule 28)

	','            reduce using rule 28
	';'            reduce using rule 28


State 94

	ListArg -> Arg .                                    (rule 25)
	ListArg -> Arg . ',' ListArg                        (rule 26)

	')'            reduce using rule 25
	','            shift, and enter state 106


State 95

	Stmt -> Type Ident '(' ListArg . ')' Block          (rule 11)

	')'            shift, and enter state 105


State 96

	Arg -> Type . Ident                                 (rule 22)
	Arg -> Type . '&' Ident                             (rule 23)

	'&'            shift, and enter state 104
	L_ident        shift, and enter state 2

	Ident          goto state 103

State 97

	Item -> Ident .                                     (rule 27)
	Item -> Ident . '=' Expr                            (rule 28)

	','            reduce using rule 27
	';'            reduce using rule 27
	'='            shift, and enter state 79


State 98

	ListItem -> Item ',' ListItem .                     (rule 30)

	';'            reduce using rule 30


State 99

	Expr6 -> Ident '(' ListExpr ')' .                   (rule 45)

	'!='           reduce using rule 45
	'%'            reduce using rule 45
	'&&'           reduce using rule 45
	')'            reduce using rule 45
	'*'            reduce using rule 45
	'+'            reduce using rule 45
	','            reduce using rule 45
	'-'            reduce using rule 45
	'/'            reduce using rule 45
	';'            reduce using rule 45
	'<'            reduce using rule 45
	'<='           reduce using rule 45
	'=='           reduce using rule 45
	'>'            reduce using rule 45
	'>='           reduce using rule 45
	'||'           reduce using rule 45


State 100

	ListExpr -> Expr ',' . ListExpr                     (rule 62)

	'!'            shift, and enter state 20
	'('            shift, and enter state 21
	')'            reduce using rule 60
	'-'            shift, and enter state 22
	'false'        shift, and enter state 25
	'true'         shift, and enter state 31
	L_ident        shift, and enter state 2
	L_integ        shift, and enter state 35
	L_quoted       shift, and enter state 36

	Ident          goto state 39
	Integer        goto state 6
	String         goto state 7
	Expr6          goto state 13
	Expr5          goto state 14
	Expr4          goto state 15
	Expr3          goto state 16
	Expr2          goto state 17
	Expr1          goto state 18
	Expr           goto state 74
	ListExpr       goto state 102

State 101

	Stmt -> Ident '=' Expr ';' .                        (rule 12)

	'!'            reduce using rule 12
	'('            reduce using rule 12
	'-'            reduce using rule 12
	';'            reduce using rule 12
	'bool'         reduce using rule 12
	'false'        reduce using rule 12
	'if'           reduce using rule 12
	'int'          reduce using rule 12
	'print'        reduce using rule 12
	'return'       reduce using rule 12
	'string'       reduce using rule 12
	'true'         reduce using rule 12
	'void'         reduce using rule 12
	'while'        reduce using rule 12
	'{'            reduce using rule 12
	'}'            reduce using rule 12
	L_ident        reduce using rule 12
	L_integ        reduce using rule 12
	L_quoted       reduce using rule 12
	%eof           reduce using rule 12


State 102

	ListExpr -> Expr ',' ListExpr .                     (rule 62)

	')'            reduce using rule 62


State 103

	Arg -> Type Ident .                                 (rule 22)

	')'            reduce using rule 22
	','            reduce using rule 22


State 104

	Arg -> Type '&' . Ident                             (rule 23)

	L_ident        shift, and enter state 2

	Ident          goto state 112

State 105

	Stmt -> Type Ident '(' ListArg ')' . Block          (rule 11)

	'{'            shift, and enter state 34

	Block          goto state 111

State 106

	ListArg -> Arg ',' . ListArg                        (rule 26)

	')'            reduce using rule 24
	'bool'         shift, and enter state 24
	'int'          shift, and enter state 27
	'string'       shift, and enter state 30
	'void'         shift, and enter state 32

	Arg            goto state 94
	ListArg        goto state 110
	Type           goto state 96
	PType          goto state 11
	VType          goto state 12

State 107

	Stmt -> 'if' '(' Expr ')' Block .                   (rule 17)
	Stmt -> 'if' '(' Expr ')' Block . 'else' Block      (rule 18)

	'!'            reduce using rule 17
	'('            reduce using rule 17
	'-'            reduce using rule 17
	';'            reduce using rule 17
	'bool'         reduce using rule 17
	'else'         shift, and enter state 109
	'false'        reduce using rule 17
	'if'           reduce using rule 17
	'int'          reduce using rule 17
	'print'        reduce using rule 17
	'return'       reduce using rule 17
	'string'       reduce using rule 17
	'true'         reduce using rule 17
	'void'         reduce using rule 17
	'while'        reduce using rule 17
	'{'            reduce using rule 17
	'}'            reduce using rule 17
	L_ident        reduce using rule 17
	L_integ        reduce using rule 17
	L_quoted       reduce using rule 17
	%eof           reduce using rule 17


State 108

	Stmt -> 'while' '(' Expr ')' Block .                (rule 19)

	'!'            reduce using rule 19
	'('            reduce using rule 19
	'-'            reduce using rule 19
	';'            reduce using rule 19
	'bool'         reduce using rule 19
	'false'        reduce using rule 19
	'if'           reduce using rule 19
	'int'          reduce using rule 19
	'print'        reduce using rule 19
	'return'       reduce using rule 19
	'string'       reduce using rule 19
	'true'         reduce using rule 19
	'void'         reduce using rule 19
	'while'        reduce using rule 19
	'{'            reduce using rule 19
	'}'            reduce using rule 19
	L_ident        reduce using rule 19
	L_integ        reduce using rule 19
	L_quoted       reduce using rule 19
	%eof           reduce using rule 19


State 109

	Stmt -> 'if' '(' Expr ')' Block 'else' . Block      (rule 18)

	'{'            shift, and enter state 34

	Block          goto state 113

State 110

	ListArg -> Arg ',' ListArg .                        (rule 26)

	')'            reduce using rule 26


State 111

	Stmt -> Type Ident '(' ListArg ')' Block .          (rule 11)

	'!'            reduce using rule 11
	'('            reduce using rule 11
	'-'            reduce using rule 11
	';'            reduce using rule 11
	'bool'         reduce using rule 11
	'false'        reduce using rule 11
	'if'           reduce using rule 11
	'int'          reduce using rule 11
	'print'        reduce using rule 11
	'return'       reduce using rule 11
	'string'       reduce using rule 11
	'true'         reduce using rule 11
	'void'         reduce using rule 11
	'while'        reduce using rule 11
	'{'            reduce using rule 11
	'}'            reduce using rule 11
	L_ident        reduce using rule 11
	L_integ        reduce using rule 11
	L_quoted       reduce using rule 11
	%eof           reduce using rule 11


State 112

	Arg -> Type '&' Ident .                             (rule 23)

	')'            reduce using rule 23
	','            reduce using rule 23


State 113

	Stmt -> 'if' '(' Expr ')' Block 'else' Block .      (rule 18)

	'!'            reduce using rule 18
	'('            reduce using rule 18
	'-'            reduce using rule 18
	';'            reduce using rule 18
	'bool'         reduce using rule 18
	'false'        reduce using rule 18
	'if'           reduce using rule 18
	'int'          reduce using rule 18
	'print'        reduce using rule 18
	'return'       reduce using rule 18
	'string'       reduce using rule 18
	'true'         reduce using rule 18
	'void'         reduce using rule 18
	'while'        reduce using rule 18
	'{'            reduce using rule 18
	'}'            reduce using rule 18
	L_ident        reduce using rule 18
	L_integ        reduce using rule 18
	L_quoted       reduce using rule 18
	%eof           reduce using rule 18


-----------------------------------------------------------------------------
Grammar Totals
-----------------------------------------------------------------------------
Number of rules: 74
Number of terminals: 38
Number of non-terminals: 27
Number of states: 114
